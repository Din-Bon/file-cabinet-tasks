<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FileCabinetApp</name>
    </assembly>
    <members>
        <member name="T:FileCabinetApp.FilesystemEnumerable">
            <summary>
            Collection for filesystem service.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FilesystemEnumerable.#ctor(System.Collections.Generic.List{System.Int64},System.IO.FileStream)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FilesystemEnumerable"/> class.
            </summary>
            <param name="positions">List of record positions in file.</param>
            <param name="stream">File.</param>
        </member>
        <member name="M:FileCabinetApp.FilesystemEnumerable.GetEnumerator">
            <summary>
            Get enumerator for filesystem collection.
            </summary>
            <returns>Enumerator.</returns>
        </member>
        <member name="M:FileCabinetApp.FilesystemEnumerable.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets default IEnumerable.
            </summary>
            <returns>none.</returns>
            <exception cref="T:System.NotImplementedException">Nothing default should return.</exception>
        </member>
        <member name="M:FileCabinetApp.FilesystemEnumerable.BytesToRecord(System.Byte[])">
            <summary>
            Convert bytes to record parameters.
            </summary>
            <param name="bytes">Bytes with data.</param>
            <returns>Record.</returns>
        </member>
        <member name="T:FileCabinetApp.FilesystemEnumerator">
            <summary>
            Enumerator for filesystem service record collections.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FilesystemEnumerator.#ctor(System.Collections.Generic.List{System.Int64},System.IO.FileStream)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FilesystemEnumerator"/> class.
            </summary>
            <param name="collection">Collection of record positions in file.</param>
            <param name="stream">File.</param>
        </member>
        <member name="P:FileCabinetApp.FilesystemEnumerator.Current">
            <summary>
            Gets FileCabinetRecord from collection
            by current position.
            </summary>
            <value>Record.</value>
        </member>
        <member name="P:FileCabinetApp.FilesystemEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets by default object from
            IEnumerator FileCabinetRecord.
            </summary>
            <value>Record.</value>
        </member>
        <member name="M:FileCabinetApp.FilesystemEnumerator.MoveNext">
            <summary>
            Increment positions.
            </summary>
            <returns>Success of operation.</returns>
        </member>
        <member name="M:FileCabinetApp.FilesystemEnumerator.Reset">
            <summary>
            Set position at start.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FilesystemEnumerator.Dispose">
            <summary>
            Dispose enumerator.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FilesystemEnumerator.BytesToRecord(System.Byte[])">
            <summary>
            Convert bytes to record parameters.
            </summary>
            <param name="bytes">Bytes with data.</param>
            <returns>Record.</returns>
        </member>
        <member name="T:FileCabinetApp.FilesystemIterator">
            <summary>
            Iterator for file cabinet filesystem service.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FilesystemIterator.#ctor(System.Collections.Generic.List{System.Int64},System.IO.FileStream)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FilesystemIterator"/> class.
            </summary>
            <param name="positions">Collection of positions in file.</param>
            <param name="stream">File.</param>
        </member>
        <member name="M:FileCabinetApp.FilesystemIterator.GetNext">
            <summary>
            Gets next element from collection.
            </summary>
            <returns>Next element.</returns>
        </member>
        <member name="M:FileCabinetApp.FilesystemIterator.HasMore">
            <summary>
            Gets true if collection still has elements.
            </summary>
            <returns>true/false.</returns>
        </member>
        <member name="M:FileCabinetApp.FilesystemIterator.BytesToRecord(System.Byte[])">
            <summary>
            Convert bytes to record parameters.
            </summary>
            <param name="bytes">Bytes with data.</param>
            <returns>Record.</returns>
        </member>
        <member name="T:FileCabinetApp.IRecordIterator">
            <summary>
            Iterator for file cabinet service objects.
            </summary>
        </member>
        <member name="M:FileCabinetApp.IRecordIterator.GetNext">
            <summary>
            Gets next element from collection.
            </summary>
            <returns>File cabinet record from collection.</returns>
        </member>
        <member name="M:FileCabinetApp.IRecordIterator.HasMore">
            <summary>
            Check if collection has next element.
            </summary>
            <returns>Check.</returns>
        </member>
        <member name="T:FileCabinetApp.MemoryEnumerable">
            <summary>
            Collection for memory service.
            </summary>
        </member>
        <member name="M:FileCabinetApp.MemoryEnumerable.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{FileCabinetApp.FileCabinetRecord})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.MemoryEnumerable"/> class.
            </summary>
            <param name="records">Record collection.</param>
        </member>
        <member name="M:FileCabinetApp.MemoryEnumerable.GetEnumerator">
            <summary>
            Get enumerator for memory collection.
            </summary>
            <returns>Enumerator.</returns>
        </member>
        <member name="M:FileCabinetApp.MemoryEnumerable.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets default IEnumerable.
            </summary>
            <returns>none.</returns>
            <exception cref="T:System.NotImplementedException">Nothing default should return.</exception>
        </member>
        <member name="T:FileCabinetApp.MemoryEnumerator">
            <summary>
            Enumerator for memory service record collections.
            </summary>
        </member>
        <member name="M:FileCabinetApp.MemoryEnumerator.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{FileCabinetApp.FileCabinetRecord})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.MemoryEnumerator"/> class.
            </summary>
            <param name="collection">Record collection.</param>
        </member>
        <member name="P:FileCabinetApp.MemoryEnumerator.Current">
            <summary>
            Gets FileCabinetRecord from collection
            by current position.
            </summary>
            <value>Record.</value>
        </member>
        <member name="P:FileCabinetApp.MemoryEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets by default object from
            IEnumerator FileCabinetRecord.
            </summary>
            <value>Record.</value>
        </member>
        <member name="M:FileCabinetApp.MemoryEnumerator.MoveNext">
            <summary>
            Increment positions.
            </summary>
            <returns>Success of operation.</returns>
        </member>
        <member name="M:FileCabinetApp.MemoryEnumerator.Reset">
            <summary>
            Set position at start.
            </summary>
        </member>
        <member name="M:FileCabinetApp.MemoryEnumerator.Dispose">
            <summary>
            Dispose enumerator.
            </summary>
        </member>
        <member name="T:FileCabinetApp.MemoryIterator">
            <summary>
            Iterator for file cabinet memory service.
            </summary>
        </member>
        <member name="M:FileCabinetApp.MemoryIterator.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{FileCabinetApp.FileCabinetRecord})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.MemoryIterator"/> class.
            </summary>
            <param name="records">Collection.</param>
        </member>
        <member name="M:FileCabinetApp.MemoryIterator.GetNext">
            <summary>
            Gets next element if it exists.
            </summary>
            <returns>Next element.</returns>
        </member>
        <member name="M:FileCabinetApp.MemoryIterator.HasMore">
            <summary>
            Gets true if collection still has elements.
            </summary>
            <returns>true/false.</returns>
        </member>
        <member name="T:FileCabinetApp.AppCommandRequest">
            <summary>
            Class-request.
            </summary>
        </member>
        <member name="M:FileCabinetApp.AppCommandRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.AppCommandRequest"/> class.
            </summary>
            <param name="command">Command.</param>
            <param name="parameters">Parameters.</param>
        </member>
        <member name="P:FileCabinetApp.AppCommandRequest.Command">
            <summary>
            Gets the command value.
            </summary>
            <value>Command.</value>
        </member>
        <member name="P:FileCabinetApp.AppCommandRequest.Parameters">
            <summary>
            Gets the parameters value.
            </summary>
            <value>Parameters.</value>
        </member>
        <member name="T:FileCabinetApp.CommandHandlerBase">
            <summary>
            Base command handler class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlerBase.SetNext(FileCabinetApp.ICommandHandler)">
            <summary>
            Set next command handler.
            </summary>
            <param name="handler">Command handler.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlerBase.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Passes the request further if
            the next handler is specified.
            </summary>
            <param name="request">Request.</param>
        </member>
        <member name="T:FileCabinetApp.CreateCommandHandler">
            <summary>
            Class that handle create command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CreateCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CreateCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">Service object.</param>
        </member>
        <member name="M:FileCabinetApp.CreateCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Execute create command.
            </summary>
            <param name="request">Request.</param>
        </member>
        <member name="M:FileCabinetApp.CreateCommandHandler.ValidateParameters(FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Validates input values.
            </summary>
            <param name="person">Personal data.</param>
            <param name="income">Person's income.</param>
            <param name="tax">Person's tax.</param>
            <param name="block">Person's living block.</param>
            <returns>Is the data false.</returns>
        </member>
        <member name="M:FileCabinetApp.CreateCommandHandler.ReadInput``1(System.Func{System.String,System.Tuple{System.Boolean,System.String,``0}},System.Func{``0,System.Tuple{System.Boolean,System.String}})">
            <summary>
            Main manipulation with the input parameters.
            </summary>
            <param name="converter">Convert input string in the right type.</param>
            <param name="validator">Check input data for compliance with the validation rules.</param>
            <returns>Test results.</returns>
        </member>
        <member name="M:FileCabinetApp.CreateCommandHandler.ValidateFirstName(System.String)">
            <summary>
            Checks first name for compliance with the validation rules.
            </summary>
            <param name="firstName">Input data.</param>
            <returns>Test results.</returns>
        </member>
        <member name="M:FileCabinetApp.CreateCommandHandler.ValidateLastName(System.String)">
            <summary>
            Checks last name for compliance with the validation rules.
            </summary>
            <param name="lastName">Input data.</param>
            <returns>Test results.</returns>
        </member>
        <member name="M:FileCabinetApp.CreateCommandHandler.ValidateDateOfBirth(System.DateTime)">
            <summary>
            Checks date of birth for compliance with the validation rules.
            </summary>
            <param name="dateOfBirth">Input data.</param>
            <returns>Test results.</returns>
        </member>
        <member name="M:FileCabinetApp.CreateCommandHandler.ValidateIncome(System.Int16)">
            <summary>
            Checks income for compliance with the validation rules.
            </summary>
            <param name="income">Input data.</param>
            <returns>Test results.</returns>
        </member>
        <member name="M:FileCabinetApp.CreateCommandHandler.ValidateTax(System.Decimal)">
            <summary>
            Checks tax for compliance with the validation rules.
            </summary>
            <param name="tax">Input data.</param>
            <returns>Test results.</returns>
        </member>
        <member name="M:FileCabinetApp.CreateCommandHandler.ValidateBlock(System.Char)">
            <summary>
            Checks block letter for compliance with the validation rules.
            </summary>
            <param name="block">Input data.</param>
            <returns>Test results.</returns>
        </member>
        <member name="M:FileCabinetApp.CreateCommandHandler.StringConverter(System.String)">
            <summary>
            Return tuple of parameters.
            </summary>
            <param name="name">String parameter(name).</param>
            <returns>Tuple of parameters.</returns>
        </member>
        <member name="M:FileCabinetApp.CreateCommandHandler.DateTimeConverter(System.String)">
            <summary>
            Return tuple of parameters.
            </summary>
            <param name="strDateOfBirth">String parameter(date of birth).</param>
            <returns>Tuple of parameters.</returns>
        </member>
        <member name="M:FileCabinetApp.CreateCommandHandler.ShortConverter(System.String)">
            <summary>
            Return tuple of parameters.
            </summary>
            <param name="strIncome">String parameter(income).</param>
            <returns>Tuple of parameters.</returns>
        </member>
        <member name="M:FileCabinetApp.CreateCommandHandler.DecimalConverter(System.String)">
            <summary>
            Return tuple of parameters.
            </summary>
            <param name="strTax">String parameter(tax).</param>
            <returns>Tuple of parameters.</returns>
        </member>
        <member name="M:FileCabinetApp.CreateCommandHandler.CharConverter(System.String)">
            <summary>
            Return tuple of parameters.
            </summary>
            <param name="strBlock">String parameter(block).</param>
            <returns>Tuple of parameters.</returns>
        </member>
        <member name="M:FileCabinetApp.CreateCommandHandler.Create(System.String)">
            <summary>
            Create record.
            </summary>
            <param name="parameters">Input parameters.</param>
        </member>
        <member name="T:FileCabinetApp.DeleteCommandHandler">
            <summary>
            Class that handle delete command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.DeleteCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.DeleteCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">Service object.</param>
        </member>
        <member name="M:FileCabinetApp.DeleteCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Execute insert command.
            </summary>
            <param name="request">Request.</param>
        </member>
        <member name="M:FileCabinetApp.DeleteCommandHandler.ParameterValidation(System.String)">
            <summary>
            Check if file cabinet record have
            parameter with this name.
            </summary>
            <param name="parameter">Input parameter name.</param>
            <exception cref="T:System.ArgumentException">File cabinet record doesn't have parameter with that name.</exception>
        </member>
        <member name="M:FileCabinetApp.DeleteCommandHandler.Delete(System.String)">
            <summary>
            Delete record from list.
            </summary>
            <param name="parameters">Input parameters.</param>
        </member>
        <member name="T:FileCabinetApp.ExitCommandHandler">
            <summary>
            Class that handle exit command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.ExitCommandHandler.#ctor(System.Action{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.ExitCommandHandler"/> class.
            </summary>
            <param name="exit">Exit action.</param>
        </member>
        <member name="M:FileCabinetApp.ExitCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Execute exit command.
            </summary>
            <param name="request">Request.</param>
        </member>
        <member name="M:FileCabinetApp.ExitCommandHandler.Exit(System.String)">
            <summary>
            Exit from the application.
            </summary>
            <param name="parameters">Input parameters.</param>
        </member>
        <member name="T:FileCabinetApp.ExportCommandHandler">
            <summary>
            Class that handle export command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.ExportCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.ExportCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">Service object.</param>
        </member>
        <member name="M:FileCabinetApp.ExportCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Execute export command.
            </summary>
            <param name="request">Request.</param>
        </member>
        <member name="M:FileCabinetApp.ExportCommandHandler.ParseExport(System.String)">
            <summary>
            Parse string for export command.
            </summary>
            <param name="input">Array from property and value.</param>
        </member>
        <member name="M:FileCabinetApp.ExportCommandHandler.Export(System.String)">
            <summary>
            Export records in file.
            </summary>
            <param name="parameters">Array from property and value.</param>
        </member>
        <member name="T:FileCabinetApp.FindCommandHandler">
            <summary>
            Class that handle find command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FindCommandHandler.#ctor(FileCabinetApp.IFileCabinetService,System.Action{System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord}})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FindCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">Service object.</param>
            <param name="printer">Print record in some style.</param>
        </member>
        <member name="M:FileCabinetApp.FindCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Execute find command.
            </summary>
            <param name="request">Request.</param>
        </member>
        <member name="M:FileCabinetApp.FindCommandHandler.Find(System.String)">
            <summary>
            Find record.
            </summary>
            <param name="parameters">Array from property and value.</param>
        </member>
        <member name="T:FileCabinetApp.HelpCommandHandler">
            <summary>
            Class that handle help command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.HelpCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Execute help command.
            </summary>
            <param name="request">Request.</param>
        </member>
        <member name="M:FileCabinetApp.HelpCommandHandler.PrintHelp(System.String)">
            <summary>
            Print lists of the command.
            </summary>
            <param name="parameters">Command name.</param>
        </member>
        <member name="T:FileCabinetApp.ICommandHandler">
            <summary>
            Interface of command handlers.
            </summary>
        </member>
        <member name="M:FileCabinetApp.ICommandHandler.SetNext(FileCabinetApp.ICommandHandler)">
            <summary>
            Set next command handler.
            </summary>
            <param name="handler">Next handler.</param>
        </member>
        <member name="M:FileCabinetApp.ICommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Handle with request.
            </summary>
            <param name="request">Request.</param>
        </member>
        <member name="T:FileCabinetApp.ImportCommandHandler">
            <summary>
            Class that handle import command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.ImportCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.ImportCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">Service object.</param>
        </member>
        <member name="M:FileCabinetApp.ImportCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Execute import command.
            </summary>
            <param name="request">Request.</param>
        </member>
        <member name="M:FileCabinetApp.ImportCommandHandler.ParseImport(System.String)">
            <summary>
            Parse string for import command.
            </summary>
            <param name="input">Array from property and value.</param>
        </member>
        <member name="M:FileCabinetApp.ImportCommandHandler.Import(System.String)">
            <summary>
            Import records from file.
            </summary>
            <param name="parameters">Array from property and value.</param>
        </member>
        <member name="T:FileCabinetApp.InsertCommandHandler">
            <summary>
            Class that handle insert command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.InsertCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.InsertCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">Service object.</param>
        </member>
        <member name="M:FileCabinetApp.InsertCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Execute insert command.
            </summary>
            <param name="request">Request.</param>
        </member>
        <member name="M:FileCabinetApp.InsertCommandHandler.ValidateParameters(FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Validates input values.
            </summary>
            <param name="person">Personal data.</param>
            <param name="income">Person's income.</param>
            <param name="tax">Person's tax.</param>
            <param name="block">Person's living block.</param>
            <returns>Is the data false.</returns>
        </member>
        <member name="M:FileCabinetApp.InsertCommandHandler.ReadInput``1(System.String,System.Func{System.String,System.Tuple{System.Boolean,System.String,``0}},System.Func{``0,System.Tuple{System.Boolean,System.String}})">
            <summary>
            Main manipulation with the input parameters.
            </summary>
            <param name="converter">Convert input string in the right type.</param>
            <param name="validator">Check input data for compliance with the validation rules.</param>
            <returns>Test results.</returns>
        </member>
        <member name="M:FileCabinetApp.InsertCommandHandler.ValidateId(System.Int32)">
            <summary>
            Checks id for compliance with the validation rules.
            </summary>
            <param name="id">Input data.</param>
            <returns>Test results.</returns>
        </member>
        <member name="M:FileCabinetApp.InsertCommandHandler.ValidateFirstName(System.String)">
            <summary>
            Checks first name for compliance with the validation rules.
            </summary>
            <param name="firstName">Input data.</param>
            <returns>Test results.</returns>
        </member>
        <member name="M:FileCabinetApp.InsertCommandHandler.ValidateLastName(System.String)">
            <summary>
            Checks last name for compliance with the validation rules.
            </summary>
            <param name="lastName">Input data.</param>
            <returns>Test results.</returns>
        </member>
        <member name="M:FileCabinetApp.InsertCommandHandler.ValidateDateOfBirth(System.DateTime)">
            <summary>
            Checks date of birth for compliance with the validation rules.
            </summary>
            <param name="dateOfBirth">Input data.</param>
            <returns>Test results.</returns>
        </member>
        <member name="M:FileCabinetApp.InsertCommandHandler.ValidateIncome(System.Int16)">
            <summary>
            Checks income for compliance with the validation rules.
            </summary>
            <param name="income">Input data.</param>
            <returns>Test results.</returns>
        </member>
        <member name="M:FileCabinetApp.InsertCommandHandler.ValidateTax(System.Decimal)">
            <summary>
            Checks tax for compliance with the validation rules.
            </summary>
            <param name="tax">Input data.</param>
            <returns>Test results.</returns>
        </member>
        <member name="M:FileCabinetApp.InsertCommandHandler.ValidateBlock(System.Char)">
            <summary>
            Checks block letter for compliance with the validation rules.
            </summary>
            <param name="block">Input data.</param>
            <returns>Test results.</returns>
        </member>
        <member name="M:FileCabinetApp.InsertCommandHandler.StringConverter(System.String)">
            <summary>
            Return tuple of parameters.
            </summary>
            <param name="name">String parameter(name).</param>
            <returns>Tuple of parameters.</returns>
        </member>
        <member name="M:FileCabinetApp.InsertCommandHandler.DateTimeConverter(System.String)">
            <summary>
            Return tuple of parameters.
            </summary>
            <param name="strDateOfBirth">String parameter(date of birth).</param>
            <returns>Tuple of parameters.</returns>
        </member>
        <member name="M:FileCabinetApp.InsertCommandHandler.ShortConverter(System.String)">
            <summary>
            Return tuple of parameters.
            </summary>
            <param name="strIncome">String parameter(income).</param>
            <returns>Tuple of parameters.</returns>
        </member>
        <member name="M:FileCabinetApp.InsertCommandHandler.DecimalConverter(System.String)">
            <summary>
            Return tuple of parameters.
            </summary>
            <param name="strTax">String parameter(tax).</param>
            <returns>Tuple of parameters.</returns>
        </member>
        <member name="M:FileCabinetApp.InsertCommandHandler.CharConverter(System.String)">
            <summary>
            Return tuple of parameters.
            </summary>
            <param name="strBlock">String parameter(block).</param>
            <returns>Tuple of parameters.</returns>
        </member>
        <member name="M:FileCabinetApp.InsertCommandHandler.IntConverter(System.String)">
            <summary>
            Return tuple of parameters.
            </summary>
            <param name="strid">String parameter(id).</param>
            <returns>Tuple of parameters.</returns>
        </member>
        <member name="M:FileCabinetApp.InsertCommandHandler.Insert(System.String)">
            <summary>
            Insert record to the list.
            </summary>
            <param name="parameters">Input parameters.</param>
        </member>
        <member name="T:FileCabinetApp.ListCommandHandler">
            <summary>
            Class that handle list command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.ListCommandHandler.#ctor(FileCabinetApp.IFileCabinetService,System.Action{System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord}})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.ListCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">Service object.</param>
            <param name="printer">Print record in some style.</param>
        </member>
        <member name="M:FileCabinetApp.ListCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Execute list command.
            </summary>
            <param name="request">Request.</param>
        </member>
        <member name="M:FileCabinetApp.ListCommandHandler.List(System.String)">
            <summary>
            Shows list of records.
            </summary>
            <param name="parameters">Input parameters.</param>
        </member>
        <member name="T:FileCabinetApp.PurgeCommandHandler">
            <summary>
            Class that handle purge command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.PurgeCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.PurgeCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">Service object.</param>
        </member>
        <member name="M:FileCabinetApp.PurgeCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Execute purge command.
            </summary>
            <param name="request">Request.</param>
        </member>
        <member name="M:FileCabinetApp.PurgeCommandHandler.PrintMissedCommandInfo(System.String)">
            <summary>
            Warning message.
            </summary>
            <param name="command">Command name.</param>
        </member>
        <member name="M:FileCabinetApp.PurgeCommandHandler.Purge(System.String)">
            <summary>
            Purge records.
            </summary>
            <param name="parameters">Input parameters.</param>
        </member>
        <member name="T:FileCabinetApp.ServiceCommandHandlerBase">
            <summary>
            Base class for all classes that
            use fileCabinetService.
            </summary>
        </member>
        <member name="F:FileCabinetApp.ServiceCommandHandlerBase.fileCabinetService">
            <summary>
            Base file cabinet service.
            </summary>
        </member>
        <member name="M:FileCabinetApp.ServiceCommandHandlerBase.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.ServiceCommandHandlerBase"/> class.
            </summary>
            <param name="fileCabinetService">Service object.</param>
        </member>
        <member name="T:FileCabinetApp.StatCommandHandler">
            <summary>
            Class that handle stat command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.StatCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.StatCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">Service object.</param>
        </member>
        <member name="M:FileCabinetApp.StatCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Execute stat command.
            </summary>
            <param name="request">Request.</param>
        </member>
        <member name="M:FileCabinetApp.StatCommandHandler.Stat(System.String)">
            <summary>
            Shows count of existing records.
            </summary>
            <param name="parameters">Input prameters.</param>
        </member>
        <member name="T:FileCabinetApp.UpdateCommandHandler">
            <summary>
            Class that handle update command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.UpdateCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.UpdateCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">Service object.</param>
        </member>
        <member name="M:FileCabinetApp.UpdateCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Execute edit command.
            </summary>
            <param name="request">Request.</param>
        </member>
        <member name="M:FileCabinetApp.UpdateCommandHandler.Update(System.String)">
            <summary>
            Modify existing records.
            </summary>
            <param name="parameters">Existing records parameters.</param>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordCsvWriter">
            <summary>
            Class that create snapshot of records in csv format.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecordCsvWriter"/> class.
            </summary>
            <param name="writer">Stream to write data.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvWriter.Write(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Write data from record to stream.
            </summary>
            <param name="record">Record with data.</param>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordXmlWriter">
            <summary>
            Class that create snapshot of records in xml format.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlWriter.#ctor(System.Xml.XmlWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecordXmlWriter"/> class.
            </summary>
            <param name="writer">Stream to write data.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlWriter.Write(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Write data from record to stream.
            </summary>
            <param name="record">Record with data.</param>
        </member>
        <member name="T:FileCabinetApp.FileCabinetFilesystemService">
            <summary>
            Class, that working with the records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.#ctor(System.IO.FileStream,FileCabinetApp.IRecordValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetFilesystemService"/> class.
            </summary>
            <param name="fileStream">Stream with data.</param>
            <param name="validator">.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.CreateRecord(FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Create record from the input parameters.
            </summary>
            <param name="person">Personal data.</param>
            <param name="income">Person's income.</param>
            <param name="tax">Person's tax.</param>
            <param name="block">Person's living block.</param>
            <returns>Records id.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.InsertRecord(System.Int32,FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Create record from the input parameters.
            </summary>
            <param name="id">Person's id.</param>
            <param name="person">Personal data.</param>
            <param name="income">Person's new income.</param>
            <param name="tax">Person's new tax.</param>
            <param name="block">Person's new living block.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.UpdateRecords(System.String[],System.String[])">
            <summary>
            Update record by input parameters.
            </summary>
            <param name="oldRecordParameters">Old records data.</param>
            <param name="newRecordParameters">New records data.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.DeleteRecord(System.String,System.String)">
            <summary>
            Delete record by parameter name.
            </summary>
            <param name="fieldName">Record parameter.</param>
            <param name="value">Parameter value.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Purge">
            <summary>
            Purge records.
            </summary>
            <returns>Count of purged records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindByFirstName(System.String)">
            <summary>
            Find persons by first name.
            </summary>
            <param name="firstName">Person's first name.</param>
            <returns>Array of person with same first name.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindByLastName(System.String)">
            <summary>
            Find persons by last name.
            </summary>
            <param name="lastName">Person's last name.</param>
            <returns>Array of person with same last name.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindByDateofbirth(System.String)">
            <summary>
            Find persons by date of birth.
            </summary>
            <param name="strDateOfBirth">Person's date.</param>
            <returns>Array of person with same date of birth.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.MakeSnapshot">
            <summary>
            Make snapshot of the current list of records.
            </summary>
            <returns>Snapshot of records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>
            Restore records.
            </summary>
            <param name="snapshot">Records snapshot.</param>
            <returns>Counts of imported records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.GetRecords">
            <summary>
            Get array of records.
            </summary>
            <returns>Collection of records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.GetStat">
            <summary>
            Get records count.
            </summary>
            <returns>Records count.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.RecordToBytes(FileCabinetApp.FileCabinetRecord,System.Byte)">
            <summary>
            Convert record parameters to bytes.
            </summary>
            <param name="record">Record with data.</param>
            <param name="isDeleted">Deleted value.</param>
            <returns>Byte array.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.BytesToRecord(System.Byte[])">
            <summary>
            Convert bytes to record parameters.
            </summary>
            <param name="bytes">Bytes with data.</param>
            <returns>Record.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.CheckRecordToUpdate(FileCabinetApp.FileCabinetRecord,System.String[])">
            <summary>
            Check if current record match the conditions.
            </summary>
            <param name="record">Current record from file.</param>
            <param name="oldRecordParameters">Check if record has such parameters.</param>
            <returns>Record has oldRecordParameters or not?.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.CheckOldParameter(FileCabinetApp.FileCabinetRecord,System.String,System.Int32)">
            <summary>
            Helps to check if a record has such a parameter.
            </summary>
            <param name="record">Current record.</param>
            <param name="value">Field value.</param>
            <param name="index">By index we can find out what field we check now.</param>
            <returns>Record has value or not?.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.UpdateOneRecord(FileCabinetApp.FileCabinetRecord,System.String[])">
            <summary>
            Help to update record one by one.
            </summary>
            <param name="record">Record that we update.</param>
            <param name="newRecordParameters">New parameters.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.UpdateOneParameter(FileCabinetApp.FileCabinetRecord,System.String,System.Int32)">
            <summary>
            Update parameter by its position in the array.
            </summary>
            <param name="record">Record for update.</param>
            <param name="value">New record value.</param>
            <param name="index">Index that show whar field we update.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindLastId">
            <summary>
            Find last id in the file.
            </summary>
            <returns>Last id.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindPositionById(System.Int32)">
            <summary>
            Find position by id.
            </summary>
            <param name="id">Records id.</param>
            <returns>Records position.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.ParseAndDelete(System.String,System.String,System.Int64)">
            <summary>
            Parse record in file and delete if input value
            match records value.
            </summary>
            <param name="field">Field name.</param>
            <param name="value">Field parameter.</param>
            <param name="position">Record position in file.</param>
            <returns>Deleted record id.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.DeleteInFile(FileCabinetApp.FileCabinetRecord,System.Int64)">
            <summary>
            Delete record by its position.
            </summary>
            <param name="record">Record.</param>
            <param name="position">Position in file.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.AddFirstNameDictionary(System.String,System.Int64)">
            <summary>
            Add first name as a key and the record as a value in dictionary.
            </summary>
            <param name="firstName">Person's first name.</param>
            <param name="record">Record of a person with that first name.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.AddLastNameDictionary(System.String,System.Int64)">
            <summary>
            Add last name as a key and the record as a value in dictionary.
            </summary>
            <param name="lastName">Person's last name.</param>
            <param name="record">Record of a person with that last name.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.AddDateOfBirthDictionary(System.DateTime,System.Int64)">
            <summary>
            Add date of birth as a key and the record as a value in dictionary.
            </summary>
            <param name="dateOfBirth">Person's date of birth.</param>
            <param name="record">Record of a person with that date of birth.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.EditFirstNameDictionary(System.String,System.String,System.Int64,System.Int64)">
            <summary>
            Edit value with that first name in dictionary.
            </summary>
            <param name="oldFirstName">Person's old first name.</param>
            <param name="newFirstName">Person's new first name.</param>
            <param name="oldRecord">Old record of a person.</param>
            <param name="newRecord">New record of a person with that first name.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.EditLastNameDictionary(System.String,System.String,System.Int64,System.Int64)">
            <summary>
            Edit value with that last name in dictionary.
            </summary>
            <param name="oldLastName">Person's old last name.</param>
            <param name="newLastName">Person's new last name.</param>
            <param name="oldRecord">Old record of a person.</param>
            <param name="newRecord">New record of a person with that last name.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.EditDateOfBirthDictionary(System.DateTime,System.DateTime,System.Int64,System.Int64)">
            <summary>
            Edit value with that date of birth in dictionary.
            </summary>
            <param name="oldDateOfBirth">Person's old date of birth.</param>
            <param name="newDateOfBirth">Person's new date of birth.</param>
            <param name="oldRecord">Old record of a person.</param>
            <param name="newRecord">New record of a person with that date of birth.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.RemoveInFirstNameDictionary(System.String,System.Int64)">
            <summary>
            Remove record from the firstNameDictionary.
            </summary>
            <param name="record">Record.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.RemoveInLastNameDictionary(System.String,System.Int64)">
            <summary>
            Remove record from the lastNameDictionary.
            </summary>
            <param name="record">Record.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.RemoveInDateOfBirthDictionary(System.DateTime,System.Int64)">
            <summary>
            Remove record from the dateOfBirthDictionary.
            </summary>
            <param name="record">Record.</param>
        </member>
        <member name="T:FileCabinetApp.FileCabinetMemoryService">
            <summary>
            Class, that working with the records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.#ctor(FileCabinetApp.IRecordValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetMemoryService"/> class.
            </summary>
            <param name="validator">.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.CreateRecord(FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Create record from the input parameters.
            </summary>
            <param name="person">Personal data.</param>
            <param name="income">Person's income.</param>
            <param name="tax">Person's tax.</param>
            <param name="block">Person's living block.</param>
            <returns>Records id.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.InsertRecord(System.Int32,FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Insert record to the file cabinet service list.
            </summary>
            <param name="id">Person's id.</param>
            <param name="person">Personal data.</param>
            <param name="income">Person's new income.</param>
            <param name="tax">Person's new tax.</param>
            <param name="block">Person's new living block.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.UpdateRecords(System.String[],System.String[])">
            <summary>
            Update record by input parameters.
            </summary>
            <param name="oldRecordParameters">Old records data.</param>
            <param name="newRecordParameters">New records data.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.DeleteRecord(System.String,System.String)">
            <summary>
            Delete record by parameter name.
            </summary>
            <param name="fieldName">Record parameter.</param>
            <param name="value">Parameter value.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.FindByFirstName(System.String)">
            <summary>
            Find persons by first name.
            </summary>
            <param name="firstName">Person's first name.</param>
            <returns>Array of person with same first name.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.FindByLastName(System.String)">
            <summary>
            Find persons by last name.
            </summary>
            <param name="lastName">Person's last name.</param>
            <returns>Array of person with same last name.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.FindByDateofbirth(System.String)">
            <summary>
            Find persons by date of birth.
            </summary>
            <param name="strDateOfBirth">Person's date.</param>
            <returns>Array of person with same date of birth.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.MakeSnapshot">
            <summary>
            Make snapshot of the current list of records.
            </summary>
            <returns>Snapshot of records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>
            Restore records.
            </summary>
            <param name="snapshot">Records snapshot.</param>
            <returns>Counts of imported records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.GetRecords">
            <summary>
            Get array of records.
            </summary>
            <returns>Collection of records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.GetStat">
            <summary>
            Get records count.
            </summary>
            <returns>Records count.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.AddFirstNameDictionary(System.String,FileCabinetApp.FileCabinetRecord)">
            <summary>
            Add first name as a key and the record as a value in dictionary.
            </summary>
            <param name="firstName">Person's first name.</param>
            <param name="record">Record of a person with that first name.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.AddLastNameDictionary(System.String,FileCabinetApp.FileCabinetRecord)">
            <summary>
            Add last name as a key and the record as a value in dictionary.
            </summary>
            <param name="lastName">Person's last name.</param>
            <param name="record">Record of a person with that last name.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.AddDateOfBirthDictionary(System.DateTime,FileCabinetApp.FileCabinetRecord)">
            <summary>
            Add date of birth as a key and the record as a value in dictionary.
            </summary>
            <param name="dateOfBirth">Person's date of birth.</param>
            <param name="record">Record of a person with that date of birth.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.AddToDictionaries(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Add in all dictionaries.
            </summary>
            <param name="record">Record of a person..</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.EditFirstNameDictionary(System.String,FileCabinetApp.FileCabinetRecord,FileCabinetApp.FileCabinetRecord)">
            <summary>
            Edit value with that first name in dictionary.
            </summary>
            <param name="firstName">Person's first name.</param>
            <param name="oldRecord">Old record of a person.</param>
            <param name="newRecord">New record of a person with that first name.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.EditLastNameDictionary(System.String,FileCabinetApp.FileCabinetRecord,FileCabinetApp.FileCabinetRecord)">
            <summary>
            Edit value with that last name in dictionary.
            </summary>
            <param name="lastName">Person's last name.</param>
            <param name="oldRecord">Old record of a person.</param>
            <param name="newRecord">New record of a person with that last name.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.EditDateOfBirthDictionary(System.DateTime,FileCabinetApp.FileCabinetRecord,FileCabinetApp.FileCabinetRecord)">
            <summary>
            Edit value with that date of birth in dictionary.
            </summary>
            <param name="dateOfBirth">Person's date of birth.</param>
            <param name="oldRecord">Old record of a person.</param>
            <param name="newRecord">New record of a person with that date of birth.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.EditInDictionaries(FileCabinetApp.FileCabinetRecord,FileCabinetApp.FileCabinetRecord)">
            <summary>
            Edit value everywhere.
            </summary>
            <param name="oldRecord">Old record of a person.</param>
            <param name="newRecord">New record of a person.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.RemoveInFirstNameDictionary(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Remove record from the firstNameDictionary.
            </summary>
            <param name="record">Record.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.RemoveInLastNameDictionary(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Remove record from the lastNameDictionary.
            </summary>
            <param name="record">Record.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.RemoveInDateOfBirthDictionary(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Remove record from the dateOfBirthDictionary.
            </summary>
            <param name="record">Record.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.RemoveInDictionaries(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Remove record from everywhere.
            </summary>
            <param name="record">Record.</param>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecord">
            <summary>
            Class describing a person.
            </summary>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Id">
            <summary>
            Gets or sets persons id.
            </summary>
            <value>Persons id.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Name">
            <summary>
            Gets or sets persons name.
            </summary>
            <value>Persons name.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.FirstName">
            <summary>
            Gets or sets persons first name.
            </summary>
            <value>Persons first name.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.LastName">
            <summary>
            Gets or sets persons last name.
            </summary>
            <value>Persons last name.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.DateOfBirth">
            <summary>
            Gets or sets persons date of birth.
            </summary>
            <value>Persons date of birth.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.DateString">
            <summary>
            Gets or sets persons date of birth in string format.
            </summary>
            <value>Persons date of birth.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Income">
            <summary>
            Gets or sets persons income.
            </summary>
            <value>Persons income.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Tax">
            <summary>
            Gets or sets persons tax.
            </summary>
            <value>Persons tax.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Block">
            <summary>
            Gets or sets persons living block.
            </summary>
            <value>Persons living block.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.StringBlock">
            <summary>
            Gets or sets persons living block in string.
            </summary>
            <value>Persons living block.</value>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecord.ToString">
            <summary>
            Build string from records parameters.
            </summary>
            <returns>Record string representation.</returns>
        </member>
        <member name="T:FileCabinetApp.FileCabinetServiceSnapshot">
            <summary>
            Class that create snapshot of records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.#ctor(FileCabinetApp.FileCabinetRecord[])">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetServiceSnapshot"/> class.
            </summary>
            <param name="records">Array of records.</param>
        </member>
        <member name="P:FileCabinetApp.FileCabinetServiceSnapshot.Records">
            <summary>
            Gets records.
            </summary>
            <value>Records.</value>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.SaveToCsv(System.IO.StreamWriter)">
            <summary>
            Save records data to csv file.
            </summary>
            <param name="writer">Stream that will contain records data.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.SaveToXml(System.IO.StreamWriter)">
            <summary>
            Save records data to xml file.
            </summary>
            <param name="writer">Stream that will contain records data.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.LoadFromCsv(System.IO.StreamReader)">
            <summary>
            Load records from csv file.
            </summary>
            <param name="stream">Stream that will contain records data.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.LoadFromXml(System.IO.StreamReader)">
            <summary>
            Load records from xml file.
            </summary>
            <param name="stream">Stream that will contain records data.</param>
        </member>
        <member name="T:FileCabinetApp.IFileCabinetService">
            <summary>
            File cabinet service interface.
            </summary>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.CreateRecord(FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Create record from the input parameters.
            </summary>
            <param name="person">Personal data.</param>
            <param name="income">Person's income.</param>
            <param name="tax">Person's tax.</param>
            <param name="block">Person's living block.</param>
            <returns>Records id.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.InsertRecord(System.Int32,FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Insert record to the file cabinet service.
            </summary>
            <param name="id">Person's id.</param>
            <param name="person">Personal data.</param>
            <param name="income">Person's new income.</param>
            <param name="tax">Person's new tax.</param>
            <param name="block">Person's new living block.</param>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.UpdateRecords(System.String[],System.String[])">
            <summary>
            Update record by input parameters.
            </summary>
            <param name="oldRecordParameters">Person's old data.</param>
            <param name="newRecordParameters">Personal new data.</param>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.DeleteRecord(System.String,System.String)">
            <summary>
            Delete record by parameter name.
            </summary>
            <param name="fieldName">Record parameter.</param>
            <param name="value">Parameter value.</param>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.FindByFirstName(System.String)">
            <summary>
            Find persons by first name.
            </summary>
            <param name="firstName">Person's first name.</param>
            <returns>Array of person with same first name.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.FindByLastName(System.String)">
            <summary>
            Find persons by last name.
            </summary>
            <param name="lastName">Person's last name.</param>
            <returns>Array of person with same last name.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.FindByDateofbirth(System.String)">
            <summary>
            Find persons by date of birth.
            </summary>
            <param name="strDateOfBirth">Person's date.</param>
            <returns>Array of person with same date of birth.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.MakeSnapshot">
            <summary>
            Make snapshot of the current list of records.
            </summary>
            <returns>Array of person with same date of birth.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>
            Restore records.
            </summary>
            <param name="snapshot">Records snapshot.</param>
            <returns>Counts of imported records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.Purge">
            <summary>
            Purge records.
            </summary>
            <returns>Count of purged records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.GetRecords">
            <summary>
            Get array of records.
            </summary>
            <returns>Collection of records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.GetStat">
            <summary>
            Get records count.
            </summary>
            <returns>Count of record and count of removed records.</returns>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordCsvReader">
            <summary>
            Class, that import csv.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvReader.#ctor(System.IO.StreamReader)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecordCsvReader"/> class.
            </summary>
            <param name="stream">.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvReader.ReadAll">
            <summary>
            Read data from csv file.
            </summary>
            <returns>List of records.</returns>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordXmlReader">
            <summary>
            Class, that import xml.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlReader.#ctor(System.IO.StreamReader)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecordXmlReader"/> class.
            </summary>
            <param name="stream">.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlReader.ReadAll">
            <summary>
            Read data from xml file.
            </summary>
            <returns>List of records.</returns>
        </member>
        <member name="T:FileCabinetApp.Person">
            <summary>
            Class describing a main persons data.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Person.FirstName">
            <summary>
            Gets or sets persons first name.
            </summary>
            <value>Persons first name.</value>
        </member>
        <member name="P:FileCabinetApp.Person.LastName">
            <summary>
            Gets or sets persons last name.
            </summary>
            <value>Persons last name.</value>
        </member>
        <member name="P:FileCabinetApp.Person.DateOfBirth">
            <summary>
            Gets or sets persons date of birth.
            </summary>
            <value>Persons date of birth.</value>
        </member>
        <member name="T:FileCabinetApp.PersonName">
            <summary>
            Class describing name.
            </summary>
        </member>
        <member name="P:FileCabinetApp.PersonName.FirstName">
            <summary>
            Gets or sets persons first name.
            </summary>
            <value>Persons first name.</value>
        </member>
        <member name="P:FileCabinetApp.PersonName.LastName">
            <summary>
            Gets or sets persons last name.
            </summary>
            <value>Persons last name.</value>
        </member>
        <member name="T:FileCabinetApp.Program">
            <summary>
            Start class for file cabinet application.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Program.ValidationMode">
            <summary>
            Gets and sets validation mode.
            </summary>
            <value>Validation mode.</value>
        </member>
        <member name="M:FileCabinetApp.Program.Main(System.String[])">
            <summary>
            Program entry point.
            </summary>
            <param name="args">Arguments of command line.</param>
        </member>
        <member name="M:FileCabinetApp.Program.CreateCommandHandlers">
            <summary>
            Create command handlers.
            </summary>
            <returns>Command handler.</returns>
        </member>
        <member name="M:FileCabinetApp.Program.DefaultRecordPrint(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord})">
            <summary>
            Default record printer.
            </summary>
            <param name="records">Source.</param>
        </member>
        <member name="M:FileCabinetApp.Program.DefaultRecordPrint(FileCabinetApp.IRecordIterator)">
            <summary>
            Default record printer(if source is iterator).
            </summary>
            <param name="records">Source.</param>
        </member>
        <member name="M:FileCabinetApp.Program.ChangeValidationMode(System.String)">
            <summary>
            Change validation mode.
            </summary>
            <param name="mode">Validation mode.</param>
        </member>
        <member name="M:FileCabinetApp.Program.ChangeStorage(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Change storage system type.
            </summary>
            <param name="mode">Storage mode.</param>
        </member>
        <member name="M:FileCabinetApp.Program.UseStopwatch(System.Boolean)">
            <summary>
            Add timer to service methods.
            </summary>
            <param name="useStopwatch">Use timer?.</param>
        </member>
        <member name="M:FileCabinetApp.Program.UseLogger(System.Boolean)">
            <summary>
            Add log system to service.
            </summary>
            <param name="useLogger">Use logger?.</param>
        </member>
        <member name="M:FileCabinetApp.Program.ParseCLArguments(System.String[])">
            <summary>
            Parse command line argumets string.
            </summary>
            <param name="cmdArguments">CL arguments.</param>
        </member>
        <member name="T:FileCabinetApp.ServiceLogger">
            <summary>
            Decorator for service object
            that write log.
            </summary>
        </member>
        <member name="M:FileCabinetApp.ServiceLogger.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.ServiceLogger"/> class.
            </summary>
            <param name="service">Instance of FileCabinetService class.</param>
        </member>
        <member name="M:FileCabinetApp.ServiceLogger.CreateRecord(FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Create record from the input parameters.
            </summary>
            <param name="person">Personal data.</param>
            <param name="income">Person's income.</param>
            <param name="tax">Person's tax.</param>
            <param name="block">Person's living block.</param>
            <returns>Records id.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceLogger.InsertRecord(System.Int32,FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Insert record from the input parameters.
            </summary>
            <param name="id">Person's id.</param>
            <param name="person">Personal data.</param>
            <param name="income">Person's new income.</param>
            <param name="tax">Person's new tax.</param>
            <param name="block">Person's new living block.</param>
        </member>
        <member name="M:FileCabinetApp.ServiceLogger.UpdateRecords(System.String[],System.String[])">
            <summary>
            Update record by input parameters.
            </summary>
            <param name="oldRecordParameters">Person's old data.</param>
            <param name="newRecordParameters">Personal new data.</param>
        </member>
        <member name="M:FileCabinetApp.ServiceLogger.DeleteRecord(System.String,System.String)">
            <summary>
            Delete record by parameter name.
            </summary>
            <param name="fieldName">Record parameter.</param>
            <param name="value">Parameter value.</param>
        </member>
        <member name="M:FileCabinetApp.ServiceLogger.FindByFirstName(System.String)">
            <summary>
            Find persons by first name.
            </summary>
            <param name="firstName">Person's first name.</param>
            <returns>Array of person with same first name.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceLogger.FindByLastName(System.String)">
            <summary>
            Find persons by last name.
            </summary>
            <param name="lastName">Person's last name.</param>
            <returns>Array of person with same last name.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceLogger.FindByDateofbirth(System.String)">
            <summary>
            Find persons by date of birth.
            </summary>
            <param name="strDateOfBirth">Person's date.</param>
            <returns>Array of person with same date of birth.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceLogger.MakeSnapshot">
            <summary>
            Make snapshot of the current list of records.
            </summary>
            <returns>Array of person with same date of birth.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceLogger.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>
            Restore records.
            </summary>
            <param name="snapshot">Records snapshot.</param>
            <returns>Counts of imported records.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceLogger.Purge">
            <summary>
            Purge records.
            </summary>
            <returns>Count of purged records.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceLogger.GetRecords">
            <summary>
            Get array of records.
            </summary>
            <returns>Collection of records.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceLogger.GetStat">
            <summary>
            Get records count.
            </summary>
            <returns>Count of record and count of removed records.</returns>
        </member>
        <member name="T:FileCabinetApp.ServiceMeter">
            <summary>
            Decorator for service object
            that measure execution time.
            </summary>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.ServiceMeter"/> class.
            </summary>
            <param name="service">Instance of FileCabinetService class.</param>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.CreateRecord(FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Create record from the input parameters.
            </summary>
            <param name="person">Personal data.</param>
            <param name="income">Person's income.</param>
            <param name="tax">Person's tax.</param>
            <param name="block">Person's living block.</param>
            <returns>Records id.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.InsertRecord(System.Int32,FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Insert record from the input parameters.
            </summary>
            <param name="id">Person's id.</param>
            <param name="person">Personal data.</param>
            <param name="income">Person's new income.</param>
            <param name="tax">Person's new tax.</param>
            <param name="block">Person's new living block.</param>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.UpdateRecords(System.String[],System.String[])">
            <summary>
            Update record by input parameters.
            </summary>
            <param name="oldRecordParameters">Person's old data.</param>
            <param name="newRecordParameters">Personal new data.</param>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.DeleteRecord(System.String,System.String)">
            <summary>
            Delete record by parameter name.
            </summary>
            <param name="fieldName">Record parameter.</param>
            <param name="value">Parameter value.</param>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.FindByFirstName(System.String)">
            <summary>
            Find persons by first name.
            </summary>
            <param name="firstName">Person's first name.</param>
            <returns>Array of person with same first name.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.FindByLastName(System.String)">
            <summary>
            Find persons by last name.
            </summary>
            <param name="lastName">Person's last name.</param>
            <returns>Array of person with same last name.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.FindByDateofbirth(System.String)">
            <summary>
            Find persons by date of birth.
            </summary>
            <param name="strDateOfBirth">Person's date.</param>
            <returns>Array of person with same date of birth.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.MakeSnapshot">
            <summary>
            Make snapshot of the current list of records.
            </summary>
            <returns>Array of person with same date of birth.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>
            Restore records.
            </summary>
            <param name="snapshot">Records snapshot.</param>
            <returns>Counts of imported records.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.Purge">
            <summary>
            Purge records.
            </summary>
            <returns>Count of purged records.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.GetRecords">
            <summary>
            Get array of records.
            </summary>
            <returns>Collection of records.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.GetStat">
            <summary>
            Get records count.
            </summary>
            <returns>Count of record and count of removed records.</returns>
        </member>
        <member name="T:FileCabinetApp.BlockValidator">
            <summary>
            Validate block.
            </summary>
        </member>
        <member name="M:FileCabinetApp.BlockValidator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.BlockValidator"/> class.
            </summary>
            <param name="first">First alphabet letter.</param>
            <param name="last">Last alphabet letter.</param>
        </member>
        <member name="M:FileCabinetApp.BlockValidator.ValidateParameters(FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Validate block.
            </summary>
            <param name="person">Personal data.</param>
            <param name="income">Person's income.</param>
            <param name="tax">Person's tax.</param>
            <param name="block">Person's living block.</param>
            <exception cref="T:System.ArgumentException">Block is not capital letter in english alphabet.</exception>
        </member>
        <member name="T:FileCabinetApp.CompositeValidator">
            <summary>
            Container for validators.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CompositeValidator.#ctor(System.Collections.Generic.IEnumerable{FileCabinetApp.IRecordValidator})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CompositeValidator"/> class.
            </summary>
            <param name="validators">Collection of validators.</param>
        </member>
        <member name="M:FileCabinetApp.CompositeValidator.ValidateParameters(FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Validates input values.
            </summary>
            <param name="person">Personal data.</param>
            <param name="income">Person's income.</param>
            <param name="tax">Person's tax.</param>
            <param name="block">Person's living block.</param>
        </member>
        <member name="T:FileCabinetApp.DateOfBirthValidator">
            <summary>
            Validate date of birth.
            </summary>
        </member>
        <member name="M:FileCabinetApp.DateOfBirthValidator.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.DateOfBirthValidator"/> class.
            </summary>
            <param name="min">Oldest users age.</param>
            <param name="max">Youngest users age.</param>
        </member>
        <member name="M:FileCabinetApp.DateOfBirthValidator.ValidateParameters(FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Validate date of birth.
            </summary>
            <param name="person">Personal data.</param>
            <param name="income">Person's income.</param>
            <param name="tax">Person's tax.</param>
            <param name="block">Person's living block.</param>
            <exception cref="T:System.ArgumentException">Date of birth out of range.</exception>
        </member>
        <member name="T:FileCabinetApp.FirstNameValidator">
            <summary>
            Validate first name.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FirstNameValidator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FirstNameValidator"/> class.
            </summary>
            <param name="min">Minimum first name length.</param>
            <param name="max">Maximum first name length.</param>
        </member>
        <member name="M:FileCabinetApp.FirstNameValidator.ValidateParameters(FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Validate first name.
            </summary>
            <param name="person">Personal data.</param>
            <param name="income">Person's income.</param>
            <param name="tax">Person's tax.</param>
            <param name="block">Person's living block.</param>
            <exception cref="T:System.ArgumentException">Errors with name.</exception>
        </member>
        <member name="T:FileCabinetApp.IncomeValidator">
            <summary>
            Validate income.
            </summary>
        </member>
        <member name="M:FileCabinetApp.IncomeValidator.#ctor(System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.IncomeValidator"/> class.
            </summary>
            <param name="min">Minimum income.</param>
        </member>
        <member name="M:FileCabinetApp.IncomeValidator.ValidateParameters(FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Validate income.
            </summary>
            <param name="person">Personal data.</param>
            <param name="income">Person's income.</param>
            <param name="tax">Person's tax.</param>
            <param name="block">Person's living block.</param>
            <exception cref="T:System.ArgumentException">Value less than zero.</exception>
        </member>
        <member name="T:FileCabinetApp.IRecordValidator">
            <summary>
            Vlidate system interface.
            </summary>
        </member>
        <member name="M:FileCabinetApp.IRecordValidator.ValidateParameters(FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Validates input values.
            </summary>
            <param name="person">Personal data.</param>
            <param name="income">Person's income.</param>
            <param name="tax">Person's tax.</param>
            <param name="block">Person's living block.</param>
        </member>
        <member name="T:FileCabinetApp.LastNameValidator">
            <summary>
            Validate last name.
            </summary>
        </member>
        <member name="M:FileCabinetApp.LastNameValidator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.LastNameValidator"/> class.
            </summary>
            <param name="min">Minimum last name length.</param>
            <param name="max">Maximum last name length.</param>
        </member>
        <member name="M:FileCabinetApp.LastNameValidator.ValidateParameters(FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Validate last name.
            </summary>
            <param name="person">Personal data.</param>
            <param name="income">Person's income.</param>
            <param name="tax">Person's tax.</param>
            <param name="block">Person's living block.</param>
            <exception cref="T:System.ArgumentException">Errors with name.</exception>
        </member>
        <member name="T:FileCabinetApp.BlockLetterRange">
            <summary>
            Contain restrictions for block.
            </summary>
        </member>
        <member name="P:FileCabinetApp.BlockLetterRange.FirstAlphabet">
            <summary>
            Gets or sets first alphabet letter (in ASCII).
            </summary>
            <value>Block restriction.</value>
        </member>
        <member name="P:FileCabinetApp.BlockLetterRange.LastAlphabet">
            <summary>
            Gets or sets last alphabet letter (in ASCII).
            </summary>
            <value>Block restriction.</value>
        </member>
        <member name="T:FileCabinetApp.DateOfBirthRange">
            <summary>
            Contain restrictions for date of birth.
            </summary>
        </member>
        <member name="P:FileCabinetApp.DateOfBirthRange.From">
            <summary>
            Gets or sets minimum date of birth.
            </summary>
            <value>Date of birth restriction.</value>
        </member>
        <member name="P:FileCabinetApp.DateOfBirthRange.To">
            <summary>
            Gets or sets maximum date of birth.
            </summary>
            <value>Date of birth restriction.</value>
        </member>
        <member name="T:FileCabinetApp.FirstNameLength">
            <summary>
            Contain retrictions for first name.
            </summary>
        </member>
        <member name="P:FileCabinetApp.FirstNameLength.MinFirstNameLength">
            <summary>
            Gets or sets min first name length.
            </summary>
            <value>Name restriction.</value>
        </member>
        <member name="P:FileCabinetApp.FirstNameLength.MaxFirstNameLength">
            <summary>
            Gets or sets max first name length.
            </summary>
            <value>Name restriction.</value>
        </member>
        <member name="T:FileCabinetApp.IncomeRange">
            <summary>
            Contain restrictions for income.
            </summary>
        </member>
        <member name="P:FileCabinetApp.IncomeRange.MinIncome">
            <summary>
            Gets or sets min income.
            </summary>
            <value>Income restriction.</value>
        </member>
        <member name="T:FileCabinetApp.LastNameLength">
            <summary>
            Contain restrictions for last name.
            </summary>
        </member>
        <member name="P:FileCabinetApp.LastNameLength.MinLastNameLength">
            <summary>
            Gets or sets min last name length.
            </summary>
            <value>Name restriction.</value>
        </member>
        <member name="P:FileCabinetApp.LastNameLength.MaxLastNameLength">
            <summary>
            Gets or sets max last name length.
            </summary>
            <value>Name restriction.</value>
        </member>
        <member name="T:FileCabinetApp.TaxRange">
            <summary>
            Contain restrictions for tax.
            </summary>
        </member>
        <member name="P:FileCabinetApp.TaxRange.MinTax">
            <summary>
            Gets or sets min tax.
            </summary>
            <value>Tax restriction.</value>
        </member>
        <member name="P:FileCabinetApp.TaxRange.MaxTax">
            <summary>
            Gets or sets max tax.
            </summary>
            <value>Tax restriction.</value>
        </member>
        <member name="T:FileCabinetApp.ValidationRestrictions">
            <summary>
            Class that describes validation
            parameters.
            </summary>
        </member>
        <member name="P:FileCabinetApp.ValidationRestrictions.FirstNameLength">
            <summary>
            Gets or sets first name restrictions.
            </summary>
            <value>First name restriction.</value>
        </member>
        <member name="P:FileCabinetApp.ValidationRestrictions.LastNameLength">
            <summary>
            Gets or sets last name restrictions.
            </summary>
            <value>Last name restriction.</value>
        </member>
        <member name="P:FileCabinetApp.ValidationRestrictions.DateOfBirthRange">
            <summary>
            Gets or sets date of birth range.
            </summary>
            <value>Date of birth restrictions.</value>
        </member>
        <member name="P:FileCabinetApp.ValidationRestrictions.IncomeRange">
            <summary>
            Gets or sets income range.
            </summary>
            <value>Income restrictions.</value>
        </member>
        <member name="P:FileCabinetApp.ValidationRestrictions.TaxRange">
            <summary>
            Gets or sets tax range.
            </summary>
            <value>Tax restrictions.</value>
        </member>
        <member name="P:FileCabinetApp.ValidationRestrictions.BlockLetterRange">
            <summary>
            Gets or sets block letter range.
            </summary>
            <value>Block restrictions.</value>
        </member>
        <member name="T:FileCabinetApp.ValidationTypeArray">
            <summary>
            Contain existing type of validation.
            </summary>
        </member>
        <member name="P:FileCabinetApp.ValidationTypeArray.Default">
            <summary>
            Gets or sets array of restrictions
            for some type of validation.
            </summary>
            <value>Array of validation rules.</value>
        </member>
        <member name="P:FileCabinetApp.ValidationTypeArray.Custom">
            <summary>
            Gets or sets array of restrictions
            for some type of validation.
            </summary>
            <value>Array of validation rules.</value>
        </member>
        <member name="T:FileCabinetApp.TaxValidator">
            <summary>
            Validate tax.
            </summary>
        </member>
        <member name="M:FileCabinetApp.TaxValidator.#ctor(System.Decimal,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.TaxValidator"/> class.
            </summary>
            <param name="min">Minimum tax.</param>
            <param name="max">Maximum tax.</param>
        </member>
        <member name="M:FileCabinetApp.TaxValidator.ValidateParameters(FileCabinetApp.Person,System.Int16,System.Decimal,System.Char)">
            <summary>
            Validate tax.
            </summary>
            <param name="person">Personal data.</param>
            <param name="income">Person's income.</param>
            <param name="tax">Person's tax.</param>
            <param name="block">Person's living block.</param>
            <exception cref="T:System.ArgumentException">Tax out of range.</exception>
        </member>
        <member name="T:FileCabinetApp.ValidationTypes">
            <summary>
            In that class we can add some
            validation type.
            </summary>
        </member>
        <member name="M:FileCabinetApp.ValidationTypes.CreateDefault(FileCabinetApp.ValidatorBuilder)">
            <summary>
            Create validator with
            default set of rules.
            </summary>
            <param name="validator">Builder for validator.</param>
            <returns>Validator.</returns>
        </member>
        <member name="M:FileCabinetApp.ValidationTypes.CreateCustom(FileCabinetApp.ValidatorBuilder)">
            <summary>
            Create validator with
            custom set of rules.
            </summary>
            <param name="validator">Builder for validator.</param>
            <returns>Validator.</returns>
        </member>
        <member name="M:FileCabinetApp.ValidationTypes.ValidateParameters(FileCabinetApp.ValidatorBuilder,FileCabinetApp.ValidationRestrictions)">
            <summary>
            Validate parameters by selected ruleset.
            </summary>
            <param name="validator">Builder for validator.</param>
            <param name="ruleset">Validation mode.</param>
            <returns>Validator.</returns>
        </member>
        <member name="T:FileCabinetApp.ValidatorBuilder">
            <summary>
            Class that create validator.
            </summary>
        </member>
        <member name="M:FileCabinetApp.ValidatorBuilder.ValidateFirstName(System.Int32,System.Int32)">
            <summary>
            Add first name validator.
            </summary>
            <param name="min">Min length.</param>
            <param name="max">Max length.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:FileCabinetApp.ValidatorBuilder.ValidateLastName(System.Int32,System.Int32)">
            <summary>
            Add last name validator.
            </summary>
            <param name="min">Min length.</param>
            <param name="max">Max length.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:FileCabinetApp.ValidatorBuilder.ValidateDateOfBirth(System.DateTime,System.DateTime)">
            <summary>
            Add date of birth validator.
            </summary>
            <param name="from">Max date of birth.</param>
            <param name="to">Min date of birth.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:FileCabinetApp.ValidatorBuilder.ValidateIncome(System.Int16)">
            <summary>
            Add income validator.
            </summary>
            <param name="min">Min income.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:FileCabinetApp.ValidatorBuilder.ValidateTax(System.Decimal,System.Decimal)">
            <summary>
            Add tax validator.
            </summary>
            <param name="min">Min tax.</param>
            <param name="max">Max tax.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:FileCabinetApp.ValidatorBuilder.ValidateBlock(System.Int32,System.Int32)">
            <summary>
            Add block validator.
            </summary>
            <param name="first">First accessible block letter.</param>
            <param name="last">Last accessible block letter.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:FileCabinetApp.ValidatorBuilder.Create">
            <summary>
            Create object of CompositeValidator type.
            </summary>
            <returns>CompositeValidator.</returns>
        </member>
    </members>
</doc>
